version: '3'

networks:
  airflow_network:
    driver: bridge

services:
  db:
    image: postgres:latest
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    ports:
      - "5433:5432"
    networks:
      - airflow_network

  postgres:
    image: postgres:latest
    environment:
      POSTGRES_USER: airflow__tutor
      POSTGRES_PASSWORD: airflow__tutor
      POSTGRES_DB: airflow__tutor
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - airflow_network

  redis:
    image: redis:latest
    networks:
      - airflow_network

  airflow-init:
    image: apache/airflow:2.8.0-python3.8 # Use the same version as other services
    depends_on:
      - postgres
      - redis
    environment:
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow__tutor:airflow__tutor@postgres/airflow__tutor
      AIRFLOW__CELERY__BROKER_URL: redis://redis:6379/0
      AIRFLOW__CELERY__RESULT_BACKEND: db+postgresql://airflow__tutor:airflow__tutor@postgres/airflow__tutor
    entrypoint: /bin/bash
    command:
      - -c
      - |
        airflow db upgrade
        airflow db init
    networks:
      - airflow_network

  airflow-webserver:
    image: apache/airflow:2.8.0-python3.8 # Use the same version as other services
    depends_on:
      - airflow-init
    environment:
      AIRFLOW__CORE__EXECUTOR: CeleryExecutor
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow__tutor:airflow__tutor@postgres/airflow__tutor
      AIRFLOW__CELERY__BROKER_URL: redis://redis:6379/0
      AIRFLOW__CELERY__RESULT_BACKEND: db+postgresql://airflow__tutor:airflow__tutor@postgres/airflow__tutor
      AIRFLOW__WEBSERVER__SECRET_KEY: my_secret_key
    volumes:
      - ./dags:/opt/airflow/dags
      - ./logs:/opt/airflow/logs
      - ./plugins:/opt/airflow/plugins
    ports:
      - "8080:8080"
    command: webserver
    networks:
      - airflow_network

  airflow-scheduler:
    image: apache/airflow:2.8.0-python3.8 # Use the same version as other services
    depends_on:
      - airflow-webserver
      - airflow-init
    environment:
      AIRFLOW__CORE__EXECUTOR: CeleryExecutor
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow__tutor:airflow__tutor@postgres/airflow__tutor
      AIRFLOW__CELERY__BROKER_URL: redis://redis:6379/0
      AIRFLOW__CELERY__RESULT_BACKEND: db+postgresql://airflow__tutor:airflow__tutor@postgres/airflow__tutor
    volumes:
      - ./dags:/opt/airflow/dags
      - ./logs:/opt/airflow/logs
      - ./plugins:/opt/airflow/plugins
    command: scheduler
    networks:
      - airflow_network

  airflow-dag-creator:
    image: apache/airflow:2.8.0-python3.8 # Use the same version as other services
    depends_on:
      - airflow-webserver
      - airflow-init
    volumes:
      - ./dags:/opt/airflow/dags
    entrypoint: /bin/bash
    command:
      - -c
      - |
        while true; do sleep 30; done
    networks:
      - airflow_network

  airflow-worker:
    image: apache/airflow:2.8.0-python3.8 # Use the same version as other services
    depends_on:
      - airflow-scheduler
      - airflow-init
    environment:
      AIRFLOW__CORE__EXECUTOR: CeleryExecutor
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow__tutor:airflow__tutor@postgres/airflow__tutor
      AIRFLOW__CELERY__BROKER_URL: redis://redis:6379/0
      AIRFLOW__CELERY__RESULT_BACKEND: db+postgresql://airflow__tutor:airflow__tutor@postgres/airflow__tutor
    volumes:
      - ./dags:/opt/airflow/dags
      - ./logs:/opt/airflow/logs
      - ./plugins:/opt/airflow/plugins
    command: celery worker
    networks:
      - airflow_network

volumes:
  postgres_data:
